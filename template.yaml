---
deployment:
  enabled: true
  chaosMonkey:
    state: enabled
  name: "test"
  port:
  - containerPort: 8887
    protocol: TCP
    name: web
  - containerPort: 8888
    protocol: TCP
    name: monitoring
  - containerPort: 8889
    protocol: UDP
    name: ping
  replicaCount: 1
  command:
    enabled: false
    arguments:
      - printenv
  commandArgs:
    enabled: false
    arguments:
      - --help
  image:
    name: ""
    tag: ""
    pullPolicy: IfNotPresent
  podAnnotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/data/metrics'
    prometheus.io/port: '8888'
  resources:
    limits:
      cpu: '1'
      memory: 2Gi
    requests:
      cpu: 100m
      memory: 256Mi
  livenessProbe:
    httpGet:
      path: /ready
      port: 8888
    initialDelaySeconds: 30
    periodSeconds: 30
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /ready
      port: 8888
    initialDelaySeconds: 30
    periodSeconds: 30
    failureThreshold: 3
  env:
  - name: POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  envFrom:
  - configMapRef:
      name: configmap_name
  - secretRef:
      name: secret_name
service:
  enabled: true
  ports:
  - name: api
    port: 80
    targetPort: 8887
    protocol: TCP
  - name: secure
    port: 443
    targetPort: 8888
    protocol: UDP
configmap:
  enabled: false
  data:
    key: "value"
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Pods
    pods:
      metricName: istio_requests_average
      targetAverageValue: 15
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 90
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 90
cronjob:
  enabled: false
  name: test
  schedule: "* 12 * * *"
  image:
    name: test
    tag: 1.0
ingress:
  enabled: false
  domain_name: "api.domain.com"
  service_port: "443"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/issuer: letsencrypt-stage
    nginx.ingress.kubernetes.io/limit-connections: "50"
    nginx.ingress.kubernetes.io/limit-rps: "500"
    nginx.ingress.kubernetes.io/limit-whitelist: "10.1.0.0/24"
    nginx.ingress.kubernetes.io/upstream-vhost: localhost:3000
